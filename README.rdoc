=Movie Database

==Individual Project by Randy Leighton

This is a Ruby rails project created to manage movies. Movies are placed into a movie table then relationally connected to categories in another table. This is based on a many to many relationship.

- Created in Ruby 2.0.0, Rails 4.1.5
- Utilizes Bundle gem to manage gem dependencies
- Database utilized: PostgreSQL
- Database names: movies_development, movies_test
- Testing utilizes Rails helper, rspec 3.0.4, and rspec-rails 3.0.2
  (if gem versions are lower than these try to use "bundle update")
---
There are many criteria this project will focus on:
* Routes are created to utilize RESTful format.
* There is a route for the homepage.
* Render and redirecting are being utilized in the controller with flash messages.
* Is your application logic in the models, and do controllers do as little work as possible?
* Parameters are utilizing the better parameters nesting format. The movie controller is using the params[:movie] format.
* Forms display errors correctly, including the refactor for partials.
* Flash message is in place for new record creation, record updating, and deleting.
* Reused code for error checking and forms is refactored into partials.
* App utilizes the asset pipeline for CSS. Bootstrap is setup and configured to run. The app/assets/stylesheets/application.css.scss file is renamed and contains css.
---
Schema:
create table
create_table "categories", force: true do |t|
    t.string   "name"
    t.datetime "created_at"
    t.datetime "updated_at"
  end
  create_table "categories_movies", force: true do |t|
    t.integer  "categories_id"
    t.integer  "movies_id"
    t.datetime "created_at"
    t.datetime "updated_at"
  end
  create_table "movies", force: true do |t|
    t.string   "name"
    t.integer  "year"
    t.datetime "created_at"
    t.datetime "updated_at"
  end
